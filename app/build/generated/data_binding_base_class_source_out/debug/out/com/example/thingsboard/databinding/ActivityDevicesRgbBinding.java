// Generated by view binder compiler. Do not edit!
package com.example.thingsboard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.thingsboard.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDevicesRgbBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView addRgb;

  @NonNull
  public final TextView backRgb;

  @NonNull
  public final ImageButton bianjiRgb;

  @NonNull
  public final TextView rgbApitag;

  @NonNull
  public final LinearLayout rgbBei;

  @NonNull
  public final TextView rgbDevice;

  @NonNull
  public final TextView rgbName;

  @NonNull
  public final TextView rgbType;

  @NonNull
  public final ImageButton shanchuRgb;

  @NonNull
  public final View vv;

  private ActivityDevicesRgbBinding(@NonNull LinearLayout rootView, @NonNull TextView addRgb,
      @NonNull TextView backRgb, @NonNull ImageButton bianjiRgb, @NonNull TextView rgbApitag,
      @NonNull LinearLayout rgbBei, @NonNull TextView rgbDevice, @NonNull TextView rgbName,
      @NonNull TextView rgbType, @NonNull ImageButton shanchuRgb, @NonNull View vv) {
    this.rootView = rootView;
    this.addRgb = addRgb;
    this.backRgb = backRgb;
    this.bianjiRgb = bianjiRgb;
    this.rgbApitag = rgbApitag;
    this.rgbBei = rgbBei;
    this.rgbDevice = rgbDevice;
    this.rgbName = rgbName;
    this.rgbType = rgbType;
    this.shanchuRgb = shanchuRgb;
    this.vv = vv;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDevicesRgbBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDevicesRgbBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_devices_rgb, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDevicesRgbBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_rgb;
      TextView addRgb = ViewBindings.findChildViewById(rootView, id);
      if (addRgb == null) {
        break missingId;
      }

      id = R.id.back_rgb;
      TextView backRgb = ViewBindings.findChildViewById(rootView, id);
      if (backRgb == null) {
        break missingId;
      }

      id = R.id.bianji_rgb;
      ImageButton bianjiRgb = ViewBindings.findChildViewById(rootView, id);
      if (bianjiRgb == null) {
        break missingId;
      }

      id = R.id.rgb_apitag;
      TextView rgbApitag = ViewBindings.findChildViewById(rootView, id);
      if (rgbApitag == null) {
        break missingId;
      }

      id = R.id.rgb_bei;
      LinearLayout rgbBei = ViewBindings.findChildViewById(rootView, id);
      if (rgbBei == null) {
        break missingId;
      }

      id = R.id.rgb_device;
      TextView rgbDevice = ViewBindings.findChildViewById(rootView, id);
      if (rgbDevice == null) {
        break missingId;
      }

      id = R.id.rgb_name;
      TextView rgbName = ViewBindings.findChildViewById(rootView, id);
      if (rgbName == null) {
        break missingId;
      }

      id = R.id.rgb_type;
      TextView rgbType = ViewBindings.findChildViewById(rootView, id);
      if (rgbType == null) {
        break missingId;
      }

      id = R.id.shanchu_rgb;
      ImageButton shanchuRgb = ViewBindings.findChildViewById(rootView, id);
      if (shanchuRgb == null) {
        break missingId;
      }

      id = R.id.vv;
      View vv = ViewBindings.findChildViewById(rootView, id);
      if (vv == null) {
        break missingId;
      }

      return new ActivityDevicesRgbBinding((LinearLayout) rootView, addRgb, backRgb, bianjiRgb,
          rgbApitag, rgbBei, rgbDevice, rgbName, rgbType, shanchuRgb, vv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
