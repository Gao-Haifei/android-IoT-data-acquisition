// Generated by view binder compiler. Do not edit!
package com.example.thingsboard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.thingsboard.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHistoryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView endTime;

  @NonNull
  public final FrameLayout head;

  @NonNull
  public final RecyclerView historyRecycler;

  @NonNull
  public final Spinner historySp;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView select;

  @NonNull
  public final TextView startTime;

  @NonNull
  public final TextView time;

  @NonNull
  public final TextView value;

  private ActivityHistoryBinding(@NonNull LinearLayout rootView, @NonNull TextView endTime,
      @NonNull FrameLayout head, @NonNull RecyclerView historyRecycler, @NonNull Spinner historySp,
      @NonNull TextView name, @NonNull TextView select, @NonNull TextView startTime,
      @NonNull TextView time, @NonNull TextView value) {
    this.rootView = rootView;
    this.endTime = endTime;
    this.head = head;
    this.historyRecycler = historyRecycler;
    this.historySp = historySp;
    this.name = name;
    this.select = select;
    this.startTime = startTime;
    this.time = time;
    this.value = value;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.end_time;
      TextView endTime = ViewBindings.findChildViewById(rootView, id);
      if (endTime == null) {
        break missingId;
      }

      id = R.id.head;
      FrameLayout head = ViewBindings.findChildViewById(rootView, id);
      if (head == null) {
        break missingId;
      }

      id = R.id.history_recycler;
      RecyclerView historyRecycler = ViewBindings.findChildViewById(rootView, id);
      if (historyRecycler == null) {
        break missingId;
      }

      id = R.id.history_sp;
      Spinner historySp = ViewBindings.findChildViewById(rootView, id);
      if (historySp == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.select;
      TextView select = ViewBindings.findChildViewById(rootView, id);
      if (select == null) {
        break missingId;
      }

      id = R.id.start_time;
      TextView startTime = ViewBindings.findChildViewById(rootView, id);
      if (startTime == null) {
        break missingId;
      }

      id = R.id.time;
      TextView time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      id = R.id.value;
      TextView value = ViewBindings.findChildViewById(rootView, id);
      if (value == null) {
        break missingId;
      }

      return new ActivityHistoryBinding((LinearLayout) rootView, endTime, head, historyRecycler,
          historySp, name, select, startTime, time, value);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
