// Generated by view binder compiler. Do not edit!
package com.example.thingsboard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.thingsboard.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BeidouItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton bianjiLed;

  @NonNull
  public final LinearLayout led;

  @NonNull
  public final TextView ledDevicesAddress;

  @NonNull
  public final TextView ledDevicesApitag;

  @NonNull
  public final TextView ledDevicesName;

  @NonNull
  public final TextView ledDevicesType;

  @NonNull
  public final ImageButton shanchuLed;

  private BeidouItemBinding(@NonNull LinearLayout rootView, @NonNull ImageButton bianjiLed,
      @NonNull LinearLayout led, @NonNull TextView ledDevicesAddress,
      @NonNull TextView ledDevicesApitag, @NonNull TextView ledDevicesName,
      @NonNull TextView ledDevicesType, @NonNull ImageButton shanchuLed) {
    this.rootView = rootView;
    this.bianjiLed = bianjiLed;
    this.led = led;
    this.ledDevicesAddress = ledDevicesAddress;
    this.ledDevicesApitag = ledDevicesApitag;
    this.ledDevicesName = ledDevicesName;
    this.ledDevicesType = ledDevicesType;
    this.shanchuLed = shanchuLed;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BeidouItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BeidouItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.beidou_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BeidouItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bianji_led;
      ImageButton bianjiLed = ViewBindings.findChildViewById(rootView, id);
      if (bianjiLed == null) {
        break missingId;
      }

      id = R.id.led;
      LinearLayout led = ViewBindings.findChildViewById(rootView, id);
      if (led == null) {
        break missingId;
      }

      id = R.id.led_devices_address;
      TextView ledDevicesAddress = ViewBindings.findChildViewById(rootView, id);
      if (ledDevicesAddress == null) {
        break missingId;
      }

      id = R.id.led_devices_apitag;
      TextView ledDevicesApitag = ViewBindings.findChildViewById(rootView, id);
      if (ledDevicesApitag == null) {
        break missingId;
      }

      id = R.id.led_devices_name;
      TextView ledDevicesName = ViewBindings.findChildViewById(rootView, id);
      if (ledDevicesName == null) {
        break missingId;
      }

      id = R.id.led_devices_type;
      TextView ledDevicesType = ViewBindings.findChildViewById(rootView, id);
      if (ledDevicesType == null) {
        break missingId;
      }

      id = R.id.shanchu_led;
      ImageButton shanchuLed = ViewBindings.findChildViewById(rootView, id);
      if (shanchuLed == null) {
        break missingId;
      }

      return new BeidouItemBinding((LinearLayout) rootView, bianjiLed, led, ledDevicesAddress,
          ledDevicesApitag, ledDevicesName, ledDevicesType, shanchuLed);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
