// Generated by view binder compiler. Do not edit!
package com.example.thingsboard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.thingsboard.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BianjiConnectBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText connectName;

  @NonNull
  public final Spinner connectType;

  @NonNull
  public final EditText edConnectIp;

  @NonNull
  public final EditText edConnectPort;

  @NonNull
  public final Button modbusDialogCancel;

  @NonNull
  public final Button modbusDialogOk;

  private BianjiConnectBinding(@NonNull LinearLayout rootView, @NonNull EditText connectName,
      @NonNull Spinner connectType, @NonNull EditText edConnectIp, @NonNull EditText edConnectPort,
      @NonNull Button modbusDialogCancel, @NonNull Button modbusDialogOk) {
    this.rootView = rootView;
    this.connectName = connectName;
    this.connectType = connectType;
    this.edConnectIp = edConnectIp;
    this.edConnectPort = edConnectPort;
    this.modbusDialogCancel = modbusDialogCancel;
    this.modbusDialogOk = modbusDialogOk;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BianjiConnectBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BianjiConnectBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bianji_connect, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BianjiConnectBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.connect_name;
      EditText connectName = ViewBindings.findChildViewById(rootView, id);
      if (connectName == null) {
        break missingId;
      }

      id = R.id.connect_type;
      Spinner connectType = ViewBindings.findChildViewById(rootView, id);
      if (connectType == null) {
        break missingId;
      }

      id = R.id.ed_connect_ip;
      EditText edConnectIp = ViewBindings.findChildViewById(rootView, id);
      if (edConnectIp == null) {
        break missingId;
      }

      id = R.id.ed_connect_port;
      EditText edConnectPort = ViewBindings.findChildViewById(rootView, id);
      if (edConnectPort == null) {
        break missingId;
      }

      id = R.id.modbus_dialog_cancel;
      Button modbusDialogCancel = ViewBindings.findChildViewById(rootView, id);
      if (modbusDialogCancel == null) {
        break missingId;
      }

      id = R.id.modbus_dialog_ok;
      Button modbusDialogOk = ViewBindings.findChildViewById(rootView, id);
      if (modbusDialogOk == null) {
        break missingId;
      }

      return new BianjiConnectBinding((LinearLayout) rootView, connectName, connectType,
          edConnectIp, edConnectPort, modbusDialogCancel, modbusDialogOk);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
