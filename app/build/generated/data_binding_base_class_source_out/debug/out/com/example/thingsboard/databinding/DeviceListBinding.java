// Generated by view binder compiler. Do not edit!
package com.example.thingsboard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.thingsboard.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DeviceListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView DI;

  @NonNull
  public final TextView apitag;

  @NonNull
  public final LinearLayout beijing;

  @NonNull
  public final ImageButton bianji4150;

  @NonNull
  public final TextView chu;

  @NonNull
  public final TextView device;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView ru;

  @NonNull
  public final ImageButton shanchu4150;

  @NonNull
  public final TextView type;

  private DeviceListBinding(@NonNull LinearLayout rootView, @NonNull TextView DI,
      @NonNull TextView apitag, @NonNull LinearLayout beijing, @NonNull ImageButton bianji4150,
      @NonNull TextView chu, @NonNull TextView device, @NonNull TextView name, @NonNull TextView ru,
      @NonNull ImageButton shanchu4150, @NonNull TextView type) {
    this.rootView = rootView;
    this.DI = DI;
    this.apitag = apitag;
    this.beijing = beijing;
    this.bianji4150 = bianji4150;
    this.chu = chu;
    this.device = device;
    this.name = name;
    this.ru = ru;
    this.shanchu4150 = shanchu4150;
    this.type = type;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DeviceListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DeviceListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.device_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DeviceListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.DI;
      TextView DI = ViewBindings.findChildViewById(rootView, id);
      if (DI == null) {
        break missingId;
      }

      id = R.id.apitag;
      TextView apitag = ViewBindings.findChildViewById(rootView, id);
      if (apitag == null) {
        break missingId;
      }

      id = R.id.beijing;
      LinearLayout beijing = ViewBindings.findChildViewById(rootView, id);
      if (beijing == null) {
        break missingId;
      }

      id = R.id.bianji_4150;
      ImageButton bianji4150 = ViewBindings.findChildViewById(rootView, id);
      if (bianji4150 == null) {
        break missingId;
      }

      id = R.id.chu;
      TextView chu = ViewBindings.findChildViewById(rootView, id);
      if (chu == null) {
        break missingId;
      }

      id = R.id.device;
      TextView device = ViewBindings.findChildViewById(rootView, id);
      if (device == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.ru;
      TextView ru = ViewBindings.findChildViewById(rootView, id);
      if (ru == null) {
        break missingId;
      }

      id = R.id.shanchu_4150;
      ImageButton shanchu4150 = ViewBindings.findChildViewById(rootView, id);
      if (shanchu4150 == null) {
        break missingId;
      }

      id = R.id.type;
      TextView type = ViewBindings.findChildViewById(rootView, id);
      if (type == null) {
        break missingId;
      }

      return new DeviceListBinding((LinearLayout) rootView, DI, apitag, beijing, bianji4150, chu,
          device, name, ru, shanchu4150, type);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
