// Generated by view binder compiler. Do not edit!
package com.example.thingsboard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.thingsboard.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class Modbus4017SensorBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final Button btnOk;

  @NonNull
  public final EditText ed4017Apitag;

  @NonNull
  public final EditText ed4017Name;

  @NonNull
  public final Spinner sp4017Devices;

  @NonNull
  public final Spinner spVin;

  private Modbus4017SensorBinding(@NonNull LinearLayout rootView, @NonNull Button btnCancel,
      @NonNull Button btnOk, @NonNull EditText ed4017Apitag, @NonNull EditText ed4017Name,
      @NonNull Spinner sp4017Devices, @NonNull Spinner spVin) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnOk = btnOk;
    this.ed4017Apitag = ed4017Apitag;
    this.ed4017Name = ed4017Name;
    this.sp4017Devices = sp4017Devices;
    this.spVin = spVin;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static Modbus4017SensorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static Modbus4017SensorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.modbus_4017_sensor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static Modbus4017SensorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_cancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btn_ok;
      Button btnOk = ViewBindings.findChildViewById(rootView, id);
      if (btnOk == null) {
        break missingId;
      }

      id = R.id.ed_4017_apitag;
      EditText ed4017Apitag = ViewBindings.findChildViewById(rootView, id);
      if (ed4017Apitag == null) {
        break missingId;
      }

      id = R.id.ed_4017_name;
      EditText ed4017Name = ViewBindings.findChildViewById(rootView, id);
      if (ed4017Name == null) {
        break missingId;
      }

      id = R.id.sp_4017_devices;
      Spinner sp4017Devices = ViewBindings.findChildViewById(rootView, id);
      if (sp4017Devices == null) {
        break missingId;
      }

      id = R.id.sp_vin;
      Spinner spVin = ViewBindings.findChildViewById(rootView, id);
      if (spVin == null) {
        break missingId;
      }

      return new Modbus4017SensorBinding((LinearLayout) rootView, btnCancel, btnOk, ed4017Apitag,
          ed4017Name, sp4017Devices, spVin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
