// Generated by view binder compiler. Do not edit!
package com.example.thingsboard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.thingsboard.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ModbusRgbBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView deviceRgb;

  @NonNull
  public final EditText edRgbApitag;

  @NonNull
  public final EditText edRgbName;

  @NonNull
  public final Button rgbCancel;

  @NonNull
  public final Button rgbOk;

  private ModbusRgbBinding(@NonNull LinearLayout rootView, @NonNull TextView deviceRgb,
      @NonNull EditText edRgbApitag, @NonNull EditText edRgbName, @NonNull Button rgbCancel,
      @NonNull Button rgbOk) {
    this.rootView = rootView;
    this.deviceRgb = deviceRgb;
    this.edRgbApitag = edRgbApitag;
    this.edRgbName = edRgbName;
    this.rgbCancel = rgbCancel;
    this.rgbOk = rgbOk;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ModbusRgbBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ModbusRgbBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.modbus_rgb, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ModbusRgbBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.device_rgb;
      TextView deviceRgb = ViewBindings.findChildViewById(rootView, id);
      if (deviceRgb == null) {
        break missingId;
      }

      id = R.id.ed_rgb_apitag;
      EditText edRgbApitag = ViewBindings.findChildViewById(rootView, id);
      if (edRgbApitag == null) {
        break missingId;
      }

      id = R.id.ed_rgb_name;
      EditText edRgbName = ViewBindings.findChildViewById(rootView, id);
      if (edRgbName == null) {
        break missingId;
      }

      id = R.id.rgb_cancel;
      Button rgbCancel = ViewBindings.findChildViewById(rootView, id);
      if (rgbCancel == null) {
        break missingId;
      }

      id = R.id.rgb_ok;
      Button rgbOk = ViewBindings.findChildViewById(rootView, id);
      if (rgbOk == null) {
        break missingId;
      }

      return new ModbusRgbBinding((LinearLayout) rootView, deviceRgb, edRgbApitag, edRgbName,
          rgbCancel, rgbOk);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
