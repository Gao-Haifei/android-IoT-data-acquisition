// Generated by view binder compiler. Do not edit!
package com.example.thingsboard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.thingsboard.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclerDevice4017Binding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView VIN;

  @NonNull
  public final TextView apitag4017;

  @NonNull
  public final LinearLayout beijing;

  @NonNull
  public final ImageButton bianji4017;

  @NonNull
  public final TextView device4017;

  @NonNull
  public final TextView name4017;

  @NonNull
  public final ImageButton shanchu4017;

  @NonNull
  public final TextView type4017;

  private RecyclerDevice4017Binding(@NonNull LinearLayout rootView, @NonNull TextView VIN,
      @NonNull TextView apitag4017, @NonNull LinearLayout beijing, @NonNull ImageButton bianji4017,
      @NonNull TextView device4017, @NonNull TextView name4017, @NonNull ImageButton shanchu4017,
      @NonNull TextView type4017) {
    this.rootView = rootView;
    this.VIN = VIN;
    this.apitag4017 = apitag4017;
    this.beijing = beijing;
    this.bianji4017 = bianji4017;
    this.device4017 = device4017;
    this.name4017 = name4017;
    this.shanchu4017 = shanchu4017;
    this.type4017 = type4017;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerDevice4017Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerDevice4017Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recycler_device_4017, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerDevice4017Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.VIN;
      TextView VIN = ViewBindings.findChildViewById(rootView, id);
      if (VIN == null) {
        break missingId;
      }

      id = R.id.apitag_4017;
      TextView apitag4017 = ViewBindings.findChildViewById(rootView, id);
      if (apitag4017 == null) {
        break missingId;
      }

      id = R.id.beijing;
      LinearLayout beijing = ViewBindings.findChildViewById(rootView, id);
      if (beijing == null) {
        break missingId;
      }

      id = R.id.bianji_4017;
      ImageButton bianji4017 = ViewBindings.findChildViewById(rootView, id);
      if (bianji4017 == null) {
        break missingId;
      }

      id = R.id.device_4017;
      TextView device4017 = ViewBindings.findChildViewById(rootView, id);
      if (device4017 == null) {
        break missingId;
      }

      id = R.id.name_4017;
      TextView name4017 = ViewBindings.findChildViewById(rootView, id);
      if (name4017 == null) {
        break missingId;
      }

      id = R.id.shanchu_4017;
      ImageButton shanchu4017 = ViewBindings.findChildViewById(rootView, id);
      if (shanchu4017 == null) {
        break missingId;
      }

      id = R.id.type_4017;
      TextView type4017 = ViewBindings.findChildViewById(rootView, id);
      if (type4017 == null) {
        break missingId;
      }

      return new RecyclerDevice4017Binding((LinearLayout) rootView, VIN, apitag4017, beijing,
          bianji4017, device4017, name4017, shanchu4017, type4017);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
