// Generated by view binder compiler. Do not edit!
package com.example.thingsboard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.thingsboard.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SensorBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout dddd;

  @NonNull
  public final FrameLayout fOne;

  @NonNull
  public final FrameLayout fTwo;

  @NonNull
  public final ImageButton left;

  @NonNull
  public final CardView one;

  @NonNull
  public final ImageButton relaySwitch;

  @NonNull
  public final ImageButton right;

  @NonNull
  public final TextView sendColor;

  @NonNull
  public final TextView sensorApitag;

  @NonNull
  public final TextView sensorName;

  @NonNull
  public final TextView sensorTime;

  @NonNull
  public final TextView sensorValue;

  @NonNull
  public final ImageButton stop;

  @NonNull
  public final TextView tvRgbApitag;

  @NonNull
  public final TextView tvRgbColor;

  @NonNull
  public final TextView tvRgbName;

  @NonNull
  public final CardView two;

  private SensorBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout dddd,
      @NonNull FrameLayout fOne, @NonNull FrameLayout fTwo, @NonNull ImageButton left,
      @NonNull CardView one, @NonNull ImageButton relaySwitch, @NonNull ImageButton right,
      @NonNull TextView sendColor, @NonNull TextView sensorApitag, @NonNull TextView sensorName,
      @NonNull TextView sensorTime, @NonNull TextView sensorValue, @NonNull ImageButton stop,
      @NonNull TextView tvRgbApitag, @NonNull TextView tvRgbColor, @NonNull TextView tvRgbName,
      @NonNull CardView two) {
    this.rootView = rootView;
    this.dddd = dddd;
    this.fOne = fOne;
    this.fTwo = fTwo;
    this.left = left;
    this.one = one;
    this.relaySwitch = relaySwitch;
    this.right = right;
    this.sendColor = sendColor;
    this.sensorApitag = sensorApitag;
    this.sensorName = sensorName;
    this.sensorTime = sensorTime;
    this.sensorValue = sensorValue;
    this.stop = stop;
    this.tvRgbApitag = tvRgbApitag;
    this.tvRgbColor = tvRgbColor;
    this.tvRgbName = tvRgbName;
    this.two = two;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SensorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SensorBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.sensor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SensorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dddd;
      LinearLayout dddd = ViewBindings.findChildViewById(rootView, id);
      if (dddd == null) {
        break missingId;
      }

      id = R.id.f_one;
      FrameLayout fOne = ViewBindings.findChildViewById(rootView, id);
      if (fOne == null) {
        break missingId;
      }

      id = R.id.f_two;
      FrameLayout fTwo = ViewBindings.findChildViewById(rootView, id);
      if (fTwo == null) {
        break missingId;
      }

      id = R.id.left;
      ImageButton left = ViewBindings.findChildViewById(rootView, id);
      if (left == null) {
        break missingId;
      }

      id = R.id.one;
      CardView one = ViewBindings.findChildViewById(rootView, id);
      if (one == null) {
        break missingId;
      }

      id = R.id.relay_switch;
      ImageButton relaySwitch = ViewBindings.findChildViewById(rootView, id);
      if (relaySwitch == null) {
        break missingId;
      }

      id = R.id.right;
      ImageButton right = ViewBindings.findChildViewById(rootView, id);
      if (right == null) {
        break missingId;
      }

      id = R.id.send_color;
      TextView sendColor = ViewBindings.findChildViewById(rootView, id);
      if (sendColor == null) {
        break missingId;
      }

      id = R.id.sensor_apitag;
      TextView sensorApitag = ViewBindings.findChildViewById(rootView, id);
      if (sensorApitag == null) {
        break missingId;
      }

      id = R.id.sensor_name;
      TextView sensorName = ViewBindings.findChildViewById(rootView, id);
      if (sensorName == null) {
        break missingId;
      }

      id = R.id.sensor_time;
      TextView sensorTime = ViewBindings.findChildViewById(rootView, id);
      if (sensorTime == null) {
        break missingId;
      }

      id = R.id.sensor_value;
      TextView sensorValue = ViewBindings.findChildViewById(rootView, id);
      if (sensorValue == null) {
        break missingId;
      }

      id = R.id.stop;
      ImageButton stop = ViewBindings.findChildViewById(rootView, id);
      if (stop == null) {
        break missingId;
      }

      id = R.id.tv_rgb_apitag;
      TextView tvRgbApitag = ViewBindings.findChildViewById(rootView, id);
      if (tvRgbApitag == null) {
        break missingId;
      }

      id = R.id.tv_rgb_color;
      TextView tvRgbColor = ViewBindings.findChildViewById(rootView, id);
      if (tvRgbColor == null) {
        break missingId;
      }

      id = R.id.tv_rgb_name;
      TextView tvRgbName = ViewBindings.findChildViewById(rootView, id);
      if (tvRgbName == null) {
        break missingId;
      }

      id = R.id.two;
      CardView two = ViewBindings.findChildViewById(rootView, id);
      if (two == null) {
        break missingId;
      }

      return new SensorBinding((LinearLayout) rootView, dddd, fOne, fTwo, left, one, relaySwitch,
          right, sendColor, sensorApitag, sensorName, sensorTime, sensorValue, stop, tvRgbApitag,
          tvRgbColor, tvRgbName, two);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
